# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    # - name: Build with Maven
    #   run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    - name: Start GPG agent
      run: eval "$(gpg-agent --daemon --write-env-file ~/.gpg-agent-info)"
    - name: Load GPG agent environment variables
      run: source ~/.gpg-agent-info
    - name: Set GPG_TTY (if needed)
      run: export GPG_TTY=$(tty) #or export GPG_TTY=/dev/pts/0 if you know the correct one    
    - name: Import GPG key
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode | gpg --import
    - name: Build Project
      run: bash build.sh
    - name: Install Asciidoc
      run: sudo apt-get install -y asciidoctor 
    - name: Build Docs
      run: bash docs.sh
    - name: Setup Pages
      uses: actions/configure-pages@v3
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload public repository
        path: './nf2t-cli/dist'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
